service:
  extraPorts:
    - name: https
      port: 8443
      targetPort: 8443
extraEnvVars:
  - name: KC_HTTPS_CLIENT_AUTH
    value: "request"
  - name: KC_HTTPS_CERTIFICATE_FILE
    value: "/spire-certificates/svid.0.pem"
  - name: KC_HTTPS_CERTIFICATE_KEY_FILE
    value: "/spire-certificates/svid.0.key"
initContainers:
  - name: spire-agent-cli
    image: ghcr.io/spiffe/spire-agent:1.9.6
    securityContext:
      runAsUser: 1001
      runAsGroup: 1001
    command:
      - /opt/spire/bin/spire-agent
    args:
      - api
      - fetch
      - x509
      - -socketPath=/run/spire/agent-sockets/spire-agent.sock
      - -write=/spire-certificates
    volumeMounts:
      - name: spire-certificates
        mountPath: /spire-certificates
      - name: spire-sockets
        mountPath: /run/spire/agent-sockets
        readOnly: true
  - name: move
    image: busybox:1.36
    securityContext:
      runAsUser: 1001
      runAsGroup: 1001
    args:
      - mv
      - /spire-certificates/bundle.0.pem
      - /opt/bitnami/keycloak/conf/truststores/keycloak-config-cli/
    volumeMounts:
      - name: spire-certificates
        mountPath: /spire-certificates
      - name: truststores
        mountPath: /opt/bitnami/keycloak/conf/truststores/keycloak-config-cli
extraVolumeMounts:
  - name: spire-certificates
    mountPath: /spire-certificates
    readOnly: true
  - name: truststores
    mountPath: /opt/bitnami/keycloak/conf/truststores/keycloak-config-cli
    readOnly: true
extraVolumes:
  - name: spire-sockets
    hostPath:
      path: /run/spire/agent-sockets
      type: DirectoryOrCreate
  - name: spire-certificates
    emptyDir: {}
  - name: truststores
    emptyDir: {}
auth:
  adminPassword: "password"
keycloakConfigCli:
  enabled: true
  configuration:
    master.json: |
      {
        "id": "master",
        "realm": "master",
        "enabled": true,
        "users": [
          {
            "username": "keycloak-config-cli",
            "enabled": true,
            "realmRoles": [
              "admin"
            ],
            "credentials": [
              {
                "type": "password",
                "value": "it-really-doesn't-matter-what-you-put-here"
              }
            ]
          }
        ],
        "authenticationFlows": [
          {
            "alias": "direct grant x509",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "username",
                "authenticator": "direct-grant-auth-x509-username",
                "requirement": "REQUIRED",
                "priority": 0
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "alias": "username",
            "config": {
              "x509-cert-auth.regular-expression": "CN=(keycloak-config-cli)",
              "x509-cert-auth.mapper-selection": "Username or Email",
              "x509-cert-auth.mapping-source-selection": "Match SubjectDN using regular expression"
            }
          }
        ],
        "clients": [
          {
            "clientId": "keycloak-config-cli",
            "name": "keycloak-config-cli",
            "enabled": true,
            "standardFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "publicClient": true,
            "authenticationFlowBindingOverrides": {
              "direct_grant": "direct grant x509"
            },
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0
          }
        ]
      }
